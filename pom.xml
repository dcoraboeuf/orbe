<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>orbe</groupId>
	<artifactId>Orbe</artifactId>
	<version>2.1.0</version>

	<properties>
		<orbe.version>2.1.0</orbe.version>
		<doolin.version>0.6.1</doolin.version>
	</properties>

	<name>Orbe</name>
	<description>Orbe - Editeur de cartes</description>
	<url>http://www.doolin-guif.net/app/orbe/</url>

	<issueManagement>
		<system>Mantis</system>
		<url>http://www.doolin-guif.net/mantis</url>
	</issueManagement>

	<scm>
		<connection>scm:svn:https://doolin-guif.svn.sourceforge.net/svnroot/doolin-guif/tags/Orbe-2.1.0</connection>
		<url>http://doolin-guif.svn.sourceforge.net/viewvc/doolin-guif/tags/Orbe-2.1.0</url>
	</scm>

	<developers>
		<developer>
			<id>guinessman</id>
			<name>Damien Coraboeuf</name>
			<email>dcoraboeuf@free.fr</email>
			<roles>
				<role>architect</role>
				<role>developer</role>
			</roles>
		</developer>
	</developers>

	<build>
		<resources>
			<!-- Binary resources -->
			<resource>
				<filtering>false</filtering>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.gif</include>
					<include>**/*.png</include>
					<include>**/*.jpg</include>
				</includes>
			</resource>
			<!-- Non-binary resources -->
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>**/*.gif</exclude>
					<exclude>**/*.png</exclude>
					<exclude>**/*.jpg</exclude>
				</excludes>
			</resource>
			<!-- Assembly -->
			<resource>
				<directory>src/assembly</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<!-- JDK6 code -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<!-- Prepares the resources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<phase>process-resources</phase>
						<goals>
							<goal>resources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Configures the classpath in the generated JAR -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<mainClass>orbe.gui.Main</mainClass>
							<addClasspath>true</addClasspath>
							<classpathPrefix>
								dependency/
							</classpathPrefix>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<!-- Manage dependencies -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<!-- Copies all dependencies into /dependency -->
					<execution>
						<id>copy&gt;</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
					</execution>
					<!-- Extracts the launch4j ZIP -->
					<execution>
						<id>extract-launch4j</id>
						<phase>package</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>net.sf.launch4j</groupId>
									<artifactId>Launch4j</artifactId>
									<version>3.0.0-pre2</version>
									<type>zip</type>
								</artifactItem>
							</artifactItems>
							<outputDirectory>
								${project.build.directory}/launch4j
							</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Generates a ZIP including the JAR and the dependencies -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<descriptors>
						<descriptor>
							src/assembly/assembly-zip.xml
						</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>attached</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Builds all the artifacts -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>izpack</groupId>
						<artifactId>
							izpack-standalone-compiler
						</artifactId>
						<version>3.7.2</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>izpack</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<!-- Task declarations -->
								<property name="classpath.compile" refid="maven.compile.classpath" />
								<taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" classpath="${project.build.directory}/launch4j/launch4j.jar:${classpath.compile}" />
								<taskdef name="izpack" classname="com.izforge.izpack.ant.IzPackTask" />

								<!--
									All JAR are now ready. We still need to create an EXE
									for launching the application.
								-->
								<echo message="Generating EXE" />
								<launch4j configFile="${project.build.directory}/classes/install/launch4j-main.xml" />

								<!--
									... and an EXE
									for uninstalling the application.
								-->
								<echo message="Generating uninstall EXE" />
								<launch4j configFile="${project.build.directory}/classes/install/launch4j-uninstall.xml" />

								<!-- Generates the IZPack installer -->
								<echo message="Generating IZPack installer" />
								<izpack input="${project.build.directory}/classes/install/install.xml" output="${project.build.directory}/${project.name}-${project.version}-install.jar" installerType="standard" basedir="${project.build.directory}" />

								<!-- Generates an EXE for the IZPack installer -->
								<echo message="Generating EXE installer" />
								<launch4j configFile="${project.build.directory}/classes/install/launch4j-setup.xml" />
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Use the Maven build-helper plugin to attach the generated installer EXE to this
				project's main artifact -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>attach-artifact</goal>
						</goals>
						<configuration>
							<artifacts>
								<artifact>
									<file>
										${project.build.directory}/${project.name}-${project.version}-setup.exe
									</file>
									<type>exe</type>
								</artifact>
							</artifacts>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<!-- Dependencies -->
	<dependencies>
		<dependency>
			<groupId>net.sf.doolin</groupId>
			<artifactId>Doolin-Application</artifactId>
			<version>${doolin.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.doolin</groupId>
			<artifactId>Doolin-Template</artifactId>
			<version>${doolin.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.doolin</groupId>
			<artifactId>Doolin-OXML</artifactId>
			<version>${doolin.version}</version>
		</dependency>
		<dependency>
			<groupId>jgoodies</groupId>
			<artifactId>looks</artifactId>
			<version>1.2.2</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.1</version>
		</dependency>
		<!-- See maven/maven.bat -->
		<dependency>
			<groupId>com.vividsolutions</groupId>
			<artifactId>JTS</artifactId>
			<version>1.7.2</version>
		</dependency>
	</dependencies>

	<!-- Free profile for SSH upload -->
	<profiles>
		<profile>
			<id>Deploy</id>
			<dependencies>
				<dependency>
					<groupId>ant</groupId>
					<artifactId>ant-jsch</artifactId>
					<version>1.6.5</version>
				</dependency>
				<dependency>
					<groupId>jsch</groupId>
					<artifactId>jsch</artifactId>
					<version>0.1.29</version>
				</dependency>
				<dependency>
					<groupId>commons-net</groupId>
					<artifactId>commons-net</artifactId>
					<version>1.4.1</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>install</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<tasks>
										<echo message="Deploying Orbe" />
										<property name="classpath.compile" refid="maven.compile.classpath" />
										<echo message="classpath.compile=${classpath.compile}" />
										<taskdef name="scp" classname="org.apache.tools.ant.taskdefs.optional.ssh.Scp" classpath="${classpath.compile}" />
										<scp localFile="${project.build.directory}/${project.name}-${project.version}-setup.exe" todir="${doolin.ssh.user}:${doolin.ssh.password}@doolin-guif.net:/home/doolingu/public_html/app/orbe" trust="yes" />
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
